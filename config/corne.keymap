/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings =
        <&kp>,
        <&kp>;
    };
  };

  combos {
    compatible = "zmk,combos";

    tab {
      bindings = <&trans>;
      key-positions = <2 3>;
    };

    ctrl {
      bindings = <&kp LCTRL>;
      key-positions = <26 27>;
    };

    cmd {
      bindings = <&kp LCMD>;
      key-positions = <37 38>;
    };

    alt {
      bindings = <&kp LEFT_ALT>;
      key-positions = <39 40>;
    };

    shift {
      bindings = <&kp LSHIFT>;
      key-positions = <8 9>;
    };

    caps_word {
      bindings = <&caps_word>;
      key-positions = <17 18>;
    };

    delete {
      bindings = <&kp DEL>;
      key-positions = <32 33>;
    };
  };

  macros {
    zed_em_kay: zed_em_kay {
      compatible = "zmk,behavior-macro";
      label = "ZM_zed_em_kay";
      #binding-cells = <0>;
      bindings =
        <&macro_press>,
        <&kp LSHFT>,
        <&macro_tap>,
        <&kp Z &kp M &kp K>,
        <&macro_release>,
        <&kp LSHFT>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P          &kp BACKSPACE
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMICOLON  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH       &kp ESC
                         &kp LGUI  &mo 2  &kp SPACE    &kp RET  &mo 1  &kp RALT
      >;
    };

    raise {
      bindings = <
&trans      &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N1        &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0  &kp EQUAL        &kp BACKSPACE
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS      &kp KP_MULTIPLY  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS     &kp KP_DIVIDE    &trans
                                        &trans        &trans        &trans          &trans        &mo 0         &trans
      >;
    };

    lower {
      bindings = <
&kp TAB         &kp Q   &kp W   &kp E   &kp R         &kp NUMBER_1    &kp NUMBER_5   &kp NUMBER_6  &kp NUMBER_7      &kp UP_ARROW       &kp DELETE        &kp BACKSPACE
&kp LALT        &kp A   &kp S   &kp D   &kp NUMBER_2  &kp NUMBER_3    &kp NUMBER_8   &kp NUMBER_9  &kp LEFT          &kp DOWN           &kp RIGHT         &kp C_VOLUME_UP
&kp LEFT_SHIFT  &kp F1  &kp F2  &kp F3  &kp F4        &kp NUMBER_4    &kp BACKSLASH  &kp NUMBER_0  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp C_PLAY_PAUSE  &kp C_VOLUME_DOWN
                                &trans  &mo 0         &kp SPACE       &kp RET        &trans        &trans
      >;
    };
  };
};
